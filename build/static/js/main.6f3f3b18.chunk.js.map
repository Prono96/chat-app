{"version":3,"sources":["components/LoginForm.jsx","components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","App.js","index.js"],"names":["LoginForm","useState","username","setUsername","password","setPassword","error","setError","handleSubmit","e","a","preventDefault","authObject","axios","get","headers","localStorage","setItem","window","location","reload","className","onSubmit","type","value","onChange","target","placeholder","required","align","MessageForm","props","setValue","chatId","creds","event","text","trim","length","sendMessage","isTyping","htmlFor","PictureOutlined","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f3f3b18.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault();\r\n\r\n    const authObject = { 'Project-ID': \"b2e8347c-b7f6-4f49-aad9-ecffb335cbbf\", 'User-Name': username, 'User-Secret': password}\r\n\r\n    try {\r\n      // username | password => chatengine -> give message \r\n      await axios.get('https://api.chatengine.io/chats', { headers: authObject})\r\n\r\n      // works out -> logged in \r\n      localStorage.setItem('username', username);\r\n      localStorage.setItem('password', password);\r\n\r\n      window.location.reload();\r\n\r\n    } catch (error) {\r\n      // error -> try with new username \r\n      setError('Oops, incorrect credentials.')\r\n      \r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 className=\"title\">Tech Boys</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required/>\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required/>\r\n          <div align=\"center\">\r\n            <button type=\"submit\" className=\"button\">\r\n              <span>Starting Chatting</span>\r\n            </button>\r\n          </div>\r\n          <h2 className=\"error\">{error}</h2>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm;","import { useState } from 'react';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\n\r\nconst MessageForm = (props) => {\r\n  const [value, setValue] = useState('');\r\n  const {chatId, creds} = props;\r\n\r\n  \r\n    const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n\r\n      const text = value.trim();\r\n\r\n      if(text.length > 0) sendMessage( creds, chatId, { text });\r\n      setValue('');\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n      setValue(event.target.value);\r\n\r\n      isTyping(props, chatId);\r\n\r\n    }\r\n\r\n    const handleUpload = (event) => {\r\n      sendMessage(creds, chatId, { files: event.target.files, text: ''})\r\n    }\r\n\r\n    return (\r\n      // message form \r\n      <form className=\"message-form\" onSubmit={handleSubmit}>\r\n        <input \r\n          className=\"message-input\"\r\n          placeholder=\"Send a message...\"\r\n          value={value}\r\n          onChange = {handleChange}\r\n          onSubmit={handleSubmit}\r\n        />\r\n        <label htmlFor=\"upload-button\">\r\n          <span className=\"image-button\">\r\n            < PictureOutlined className=\"picture-icon\" />\r\n          </span>\r\n        </label>\r\n        <input \r\n          type=\"file\"\r\n          multiple={false}\r\n          id=\"upload-button\"\r\n          style={{ display: 'none'}}\r\n          onChange={handleUpload}\r\n        />\r\n        <button type=\"submit\" className=\"send-button\">\r\n          <SendOutlined className=\"send-icon\" />\r\n        </button>\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default MessageForm;\r\n","const MyMessage = ({ message}) => {\r\n  if(message?.attachments?.length > 0) {\r\n    return (\r\n      <img\r\n          src={message.attachments[0].file}\r\n          alt=\"message-attachment\"\r\n          className=\"message-image\"\r\n          style={{ float: 'right' }} \r\n      \r\n      />\r\n    )\r\n  }\r\n  return (\r\n    <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50'}}>\r\n      {message.text}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default MyMessage;","const TheirMessage = ({ lastMessage, message}) => {\r\n  const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username\r\n  return (\r\n    <div className=\"message-row\">\r\n      {isFirstMessageByUser && (\r\n        <div \r\n          className=\"meesage-avatar\"\r\n          style={{backgroundImage: `url(${message?.sender?.avatar})`}}\r\n        />\r\n      )}\r\n      {message?.attachments?.length > 0\r\n          ? (\r\n            <img\r\n                src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px'}} \r\n            \r\n            />\r\n          ) : (\r\n              <div className=\"message\" style={{ float: 'left',  backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px'}}>\r\n              {message.text}\r\n              </div>\r\n          ) \r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default TheirMessage;","import MessageForm from './MessageForm';\r\nimport MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\n\r\n\r\nconst ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props; \r\n\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderReadReceipts = (message, isMyMessage) => {\r\n    return chat.people.map((person, index) => person.last_read === message.id && (\r\n      <div \r\n        key={`read_${index}`}\r\n        className=\"read-receipt\"\r\n        style={{\r\n          float: isMyMessage ? 'right' : 'left',\r\n          backgroundImage: `url(${person?.person?.avatar})`\r\n        }}\r\n      />\r\n    ))\r\n  }\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n\r\n    return keys.map( (key, index) => {\r\n\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: '100%'}}>\r\n          <div className=\"message-block\">\r\n            {\r\n              isMyMessage\r\n              ? <MyMessage message={message} />\r\n              : < TheirMessage message={message} lastMessage={messages[lastMessageKey]} />\r\n            }\r\n          </div>\r\n          <div className=\"read-receipts\"  style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px'}}>\r\n            {renderReadReceipts(message, isMyMessage)} \r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  if(!chat) return 'Loading...'\r\n\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => ` ${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {renderMessages()}\r\n      <div style={{height: '100px'}}/>\r\n      <div className=\"message-form-container\">\r\n        <MessageForm { ...props} chatId={activeChat} />\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default ChatFeed;","import { ChatEngine } from 'react-chat-engine';\r\nimport LoginForm from './components/LoginForm';\r\nimport  ChatFeed from './components/ChatFeed';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  if(!localStorage.getItem('username')) return <LoginForm />\r\n  return (\r\n    <ChatEngine \r\n      height=\"100vh\"\r\n      projectID=\"b2e8347c-b7f6-4f49-aad9-ecffb335cbbf\"\r\n      // userName={localStorage.getItem('username')}\r\n      userName=\"Prono96\"\r\n      // userSecret={localStorage.getItem('password')}\r\n      userSecret=\"6534\"\r\n      renderChatFeed={ (chatAppProps) => <ChatFeed  { ...chatAppProps}/>}  \r\n    />\r\n  );\r\n}\r\n\r\nexport default App; ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render( <App />, document.getElementById('root'));"],"sourceRoot":""}